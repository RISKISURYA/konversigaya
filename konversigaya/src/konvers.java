
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author riskisuryap
 */
public class konvers extends javax.swing.JFrame {
    Clipboard clip = getToolkit().getSystemClipboard();
    /**
     * Creates new form konvers
     */
    public konvers() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        inputdata = new javax.swing.JLabel();
        outputdata = new javax.swing.JLabel();
        bilangandari = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        bilanganke = new javax.swing.JComboBox<>();
        inputt = new javax.swing.JTextField();
        outputt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtarea = new javax.swing.JTextArea();
        hapus = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Dari :");

        inputdata.setText("                   Input");

        outputdata.setText("                     Output");

        bilangandari.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Joule (J/m)", "Kilonewtons (kN)", "Giganewtons (GN)", "Dynnes (dyn)", "Millinewtons (mN)", "Nanonewtons (nN)", "Newton (N)" }));
        bilangandari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bilangandariActionPerformed(evt);
            }
        });

        jLabel5.setText("Ke :");

        bilanganke.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Joule (J/m)", "Kilonewtons (kN)", "Giganewtons (GN)", "Dynnes (dyn)", "Millinewtons (mN)", "Nanonewtons (nN)", "Newton (N)" }));
        bilanganke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bilangankeActionPerformed(evt);
            }
        });

        inputt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputtKeyReleased(evt);
            }
        });

        outputt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                outputtKeyReleased(evt);
            }
        });

        txtarea.setEditable(false);
        txtarea.setColumns(20);
        txtarea.setRows(5);
        jScrollPane1.setViewportView(txtarea);

        hapus.setText("Hapus");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("KONVERSI GAYA");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(239, 239, 239))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
        );

        jButton1.setText("Copy");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("Menu");

        jMenuItem1.setText("Keluar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Tentang");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Bantuan");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(inputt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(22, 22, 22)
                        .addComponent(bilangandari, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(261, 261, 261))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(inputdata, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 184, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(bilanganke, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(outputdata, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(outputt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1))
                .addGap(66, 66, 66))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bilangandari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(bilanganke, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputdata)
                    .addComponent(outputt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputdata))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(hapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bilangandariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bilangandariActionPerformed
        // TODO add your handling code here:
        if (bilangandari.getSelectedItem() == "Joule (J/m)"){
            inputdata.setText("      Input Joule");
        }
        if (bilangandari.getSelectedItem() == "Kilonewtons (kN)"){
            inputdata.setText("Input Kilonewtons");
        }
        if (bilangandari.getSelectedItem() == "Giganewtons (GN)"){
            inputdata.setText("Input Giganewtons");
        }
        if (bilangandari.getSelectedItem() == "Dynnes (dyn)"){
            inputdata.setText("Input Dynnes");
        }
        if (bilangandari.getSelectedItem() == "Millinewtons (mN)"){
            inputdata.setText("Input Millinewtons");
        }
        if (bilangandari.getSelectedItem() == "Nanonewtons (nN)"){
            inputdata.setText("Input Nanonewtons");
        }
        if (bilangandari.getSelectedItem() == "Newton (N)"){
            inputdata.setText("Input Newton");
        }
    }//GEN-LAST:event_bilangandariActionPerformed

    private void bilangankeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bilangankeActionPerformed
        // TODO add your handling code here:
        if (bilanganke.getSelectedItem() == "Joule (J/m)"){
            outputdata.setText("        Output Joule");
        }
        if (bilanganke.getSelectedItem() == "Kilonewtons (kN)"){
            outputdata.setText("Output Kilonewtons");
        }
        if (bilanganke.getSelectedItem() == "Giganewtons (GN)"){
            outputdata.setText("Output Giganewtons");
        }
        if (bilanganke.getSelectedItem() == "Dynnes (dyn)"){
            outputdata.setText("Output Dynnes");
        }
        if (bilanganke.getSelectedItem() == "Millinewtons (mN)"){
            outputdata.setText("Output Millinewtons");
        }
        if (bilanganke.getSelectedItem() == "Nanonewtons (nN)"){
            outputdata.setText("Output Nanonewtons");
        }
        if (bilanganke.getSelectedItem() == "Newton (N)"){
            outputdata.setText("Output Newton");
        }
    }//GEN-LAST:event_bilangankeActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        // TODO add your handling code here:
        inputt.setText("");
        outputt.setText("");
        txtarea.setText("");
        inputdata.setText("                   Input");
        outputdata.setText("                     Output");
    }//GEN-LAST:event_hapusActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        new About().setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void outputtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_outputtKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_outputtKeyReleased

    private void inputtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputtKeyReleased
        // TODO add your handling code here:
            if (inputt.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Masukkan nilai konversi", "ERROR MESSAGE", HEIGHT);
            }else{
                String input = inputt.getText();
            try {
            double value = Double.parseDouble(input);

        if (input.length() > 1) {
            String afterNumber = input.substring(input.length() - 1);
            if (!afterNumber.matches("[0-9]")) {
                JOptionPane.showMessageDialog(this, "Masukkan nilai yang valid", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
            String satuan_awal = bilangandari.getSelectedItem().toString();
            String satuan_akhir = bilanganke.getSelectedItem().toString();
            if ((satuan_awal.equalsIgnoreCase("Joule (J/m)")) && (satuan_akhir.equalsIgnoreCase("Joule (J/m)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Joule (J/m) ke Joule (J/m) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Joule (J/m)")) && (satuan_akhir.equalsIgnoreCase("Kilonewtons (kN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 1000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Joule (J/m) ke Kilonewtons (kN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Joule (J/m)")) && (satuan_akhir.equalsIgnoreCase("Giganewtons (GN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 0.000000001);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Joule (J/m) ke Giganewtons (GN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Joule (J/m)")) && (satuan_akhir.equalsIgnoreCase("Dynnes (dyn)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 100000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Joule (J/m) ke Dynnes (dyn) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Joule (J/m)")) && (satuan_akhir.equalsIgnoreCase("Millinewtons (mN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 1000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Joule (J/m) ke Millinewtons (mN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Joule (J/m)")) && (satuan_akhir.equalsIgnoreCase("Nanonewtons (nN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 1000000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Joule (J/m) ke Nanonewtons (nN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Joule (J/m)")) && (satuan_akhir.equalsIgnoreCase("Newton (N)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 1);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Joule (J/m) ke Newton (N) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Kilonewtons (kN)")) && (satuan_akhir.equalsIgnoreCase("Joule (J/m)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 1000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Kilonewtons (kN) ke Joule (J/m) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Kilonewtons (kN)")) && (satuan_akhir.equalsIgnoreCase("Kilonewtons (kN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Kilonewtons (kN) ke Kilonewtons (kN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Kilonewtons (kN)")) && (satuan_akhir.equalsIgnoreCase("Giganewtons (GN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 1000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Kilonewtons (kN) ke Giganewtons (GN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Kilonewtons (kN)")) && (satuan_akhir.equalsIgnoreCase("Dynnes (dyn)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 100000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Kilonewtons (kN) ke Dynnes (dyn) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Kilonewtons (kN)")) && (satuan_akhir.equalsIgnoreCase("Millinewtons (mN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 1000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Kilonewtons (kN) ke Millinewtons (mN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Kilonewtons (kN)")) && (satuan_akhir.equalsIgnoreCase("Nanonewtons (nN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 1000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Kilonewtons (kN) ke Nanonewtons (nN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Kilonewtons (kN)")) && (satuan_akhir.equalsIgnoreCase("Newton (N)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 1000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Kilonewtons (kN) ke Newton (N) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Giganewtons (GN)")) && (satuan_akhir.equalsIgnoreCase("Joule (J/m)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 1000000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Giganewtons (GN) ke Joule (J/m) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Giganewtons (GN)")) && (satuan_akhir.equalsIgnoreCase("Kilonewtons (kN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 1000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Giganewtons (GN) ke Kilonewtons (kN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Giganewtons (GN)")) && (satuan_akhir.equalsIgnoreCase("Giganewtons (GN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Giganewtons (GN) ke Giganewtons (GN)) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Giganewtons (GN)")) && (satuan_akhir.equalsIgnoreCase("Dynnes (dyn)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 100000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Giganewtons (GN) ke Dynnes (dyn) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Giganewtons (GN)")) && (satuan_akhir.equalsIgnoreCase("Millinewtons (mN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 1000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Giganewtons (GN) ke Millinewtons (mN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Giganewtons (GN)")) && (satuan_akhir.equalsIgnoreCase("Nanonewtons (nN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 1000000000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Giganewtons (GN) ke Nanonewtons (nN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Giganewtons (GN)")) && (satuan_akhir.equalsIgnoreCase("Newton (N)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 1000000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Giganewtons (GN) ke Newton (N) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Dynnes (dyn)")) && (satuan_akhir.equalsIgnoreCase("Joule (J/m)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 100000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Dynnes (dyn) ke Joule (J/m) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Dynnes (dyn)")) && (satuan_akhir.equalsIgnoreCase("Kilonewtons (kN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 100000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Dynnes (dyn) ke Kilonewtons (kN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Dynnes (dyn)")) && (satuan_akhir.equalsIgnoreCase("Giganewtons (GN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 10000000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Dynnes (dyn) ke Giganewtons (GN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Dynnes (dyn)")) && (satuan_akhir.equalsIgnoreCase("Dynnes (dyn)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Dynnes (dyn) ke Dynnes (dyn) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Dynnes (dyn)")) && (satuan_akhir.equalsIgnoreCase("Millinewtons (mN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 100);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Dynnes (dyn) ke Millinewtons (mN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Dynnes (dyn)")) && (satuan_akhir.equalsIgnoreCase("Nanonewtons (nN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 10000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Dynnes (dyn) ke Nanonewtons (nN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Dynnes (dyn)")) && (satuan_akhir.equalsIgnoreCase("Newton (N)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 100000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Dynnes (dyn) ke Newton (N) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Millinewtons (mN)")) && (satuan_akhir.equalsIgnoreCase("Joule (J/m)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 1000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Millinewtons (mN) ke Joule (J/m) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Millinewtons (mN)")) && (satuan_akhir.equalsIgnoreCase("Kilonewtons (kN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 1000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Millinewtons (mN) ke Kilonewtons (kN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Millinewtons (mN)")) && (satuan_akhir.equalsIgnoreCase("Kilonewtons (kN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 1000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Millinewtons (mN) ke Kilonewtons (kN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Millinewtons (mN)")) && (satuan_akhir.equalsIgnoreCase("Giganewtons (GN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 10000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Millinewtons (mN) ke Giganewtons (GN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Millinewtons (mN)")) && (satuan_akhir.equalsIgnoreCase("Dynnes (dyn)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 100);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Millinewtons (mN) ke Dynnes (dyn) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Millinewtons (mN)")) && (satuan_akhir.equalsIgnoreCase("Millinewtons (mN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal );
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Millinewtons (mN) ke Millinewtons (mN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Millinewtons (mN)")) && (satuan_akhir.equalsIgnoreCase("Nanonewtons (nN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 1000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Millinewtons (mN) ke Nanonewtons (nN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Millinewtons (mN)")) && (satuan_akhir.equalsIgnoreCase("Newton (N)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 1000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Millinewtons (mN) ke Newton (N) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Nanonewtons (nN)")) && (satuan_akhir.equalsIgnoreCase("Joule (J/m)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 1000000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Nanonewtons (nN) ke Joule (J/m) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Nanonewtons (nN)")) && (satuan_akhir.equalsIgnoreCase("Kilonewtons (kN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 1000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Nanonewtons (nN) ke Kilonewtons (kN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Nanonewtons (nN)")) && (satuan_akhir.equalsIgnoreCase("Giganewtons (GN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 1000000000000000000L);
                DecimalFormat decimalFormat = new DecimalFormat("0.##################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Nanonewtons (nN) ke Giganewtons (GN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Nanonewtons (nN)")) && (satuan_akhir.equalsIgnoreCase("Dynnes (dyn)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 10000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Nanonewtons (nN) ke Dynnes (dyn) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Nanonewtons (nN)")) && (satuan_akhir.equalsIgnoreCase("Millinewtons (mN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 1000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Nanonewtons (nN) ke Millinewtons (mN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Nanonewtons (nN)")) && (satuan_akhir.equalsIgnoreCase("Nanonewtons (nN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal );
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Nanonewtons (nN) ke Nanonewtons (nN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Nanonewtons (nN)")) && (satuan_akhir.equalsIgnoreCase("Newton (N)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 1000000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Nanonewtons (nN) ke Newton (N) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Newton (N)")) && (satuan_akhir.equalsIgnoreCase("Joule (J/m)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 1);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Newton (N) ke Joule (J/m) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Newton (N)")) && (satuan_akhir.equalsIgnoreCase("Kilonewtons (kN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 1000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Newton (N) ke Kilonewtons (kN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Newton (N)")) && (satuan_akhir.equalsIgnoreCase("Giganewtons (GN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal / 1000000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Newton (N) ke Giganewtons (GN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Newton (N)")) && (satuan_akhir.equalsIgnoreCase("Dynnes (dyn)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 100000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Newton (N) ke Dynnes (dyn) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Newton (N)")) && (satuan_akhir.equalsIgnoreCase("Millinewtons (mN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 1000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Newton (N) ke Millinewtons (mN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Newton (N)")) && (satuan_akhir.equalsIgnoreCase("Nanonewtons (nN)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal * 1000000000);
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Newton (N) ke Nanonewtons (nN) adalah "+subtotal);
            }else if ((satuan_awal.equalsIgnoreCase("Newton (N)")) && (satuan_akhir.equalsIgnoreCase("Newton (N)"))){
                String inputawal = inputt.getText();
                double awal = Double.parseDouble(inputawal);
                double CtoR = (double)(awal );
                DecimalFormat decimalFormat = new DecimalFormat("0.################");
                String subtotal = decimalFormat.format(CtoR);
                outputt.setText(subtotal);
                txtarea.setText(null);
                txtarea.append("  Hasil konversi dari "+inputt.getText()+" Newton (N) ke Newton (N) adalah "+subtotal);
            }
            } catch (NumberFormatException e) {
              JOptionPane.showMessageDialog(this, "Masukkan nilai yang valid", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
            }
        }   
    }//GEN-LAST:event_inputtKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(konvers.this, "Copy success");
        String toClipBoardText = txtarea.getText();
        StringSelection stringClip = new StringSelection(toClipBoardText);
        clip.setContents(stringClip, stringClip);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        new bantuan ().setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(awal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(awal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(awal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(awal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new konvers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> bilangandari;
    private javax.swing.JComboBox<String> bilanganke;
    private javax.swing.JButton hapus;
    private javax.swing.JLabel inputdata;
    private javax.swing.JTextField inputt;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel outputdata;
    private javax.swing.JTextField outputt;
    private javax.swing.JTextArea txtarea;
    // End of variables declaration//GEN-END:variables
}
